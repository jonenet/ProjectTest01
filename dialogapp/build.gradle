apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}



android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'



    signingConfigs {

        release {
            storeFile file("../config/systemsign.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }

    defaultConfig {
        applicationId "com.example.dragger.dialogapp"
        minSdkVersion 19
        targetSdkVersion 28
        versionName "1.0.14"
        versionCode 14


        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        //数据库概要、记录存放位置
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled false
            signingConfig = signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'MissingTranslation'
        // App is not indexable by Google Search
        disable 'GoogleAppIndexingWarning'
    }


//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def newName
//            def timeNow
////            def oldFile = output.outputFile
////            def outDirectory = oldFile.parent
//            def outDirectory
//
//            if ("true".equals(IS_JENKINS)) {
//                timeNow = JENKINS_TIME
//                outDirectory = 'D:/developTools/apachetomcat8/webapps/jenkins/apk'
//                newName = 'jone-android-v' +
//                        APP_VERSION + '-' + timeNow + '-' + '.apk'
//                output.outputFileName = new File(outDirectory, newName)
//            } else {
//                timeNow = getDate()
//                if (variant.buildType.name.equals('debug')) {
//                    newName = "jone-android-v${APP_VERSION}-debug.apk"
//                } else {
//                    newName = 'jone-android-v' +
//                            APP_VERSION + '-' + timeNow + '-' + '.apk'
//                }
//                output.outputFileName = new File(newName)
//            }
//
//        }
//    }


    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}


tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.appcompat:appcompat:1.0.2'
//    compile project(':TestAnnotation')
    //    compile project(':baselib')
    annotationProcessor project(":TestAnnotation-complier")
    implementation files('lib/inovelSocketLib.jar')
    implementation project(':animators')


    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    // liveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    // viewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"

    // room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"

    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // paging
    implementation "androidx.paging:paging-runtime:$pagingVersion"

    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'

// If you want to bind to Android-specific lifecycles
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'

    //rx
    api "io.reactivex.rxjava2:rxjava:2.2.4"
    api "io.reactivex.rxjava2:rxandroid:2.1.0"
}
repositories {
    mavenCentral()
}


